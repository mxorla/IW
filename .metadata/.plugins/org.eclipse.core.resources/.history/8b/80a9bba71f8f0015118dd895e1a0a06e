//FUNCTIONS PROTOTYPES
void agregarUsuario(uint16_t idUsuario, char *nombreUsuario, uint16_t idGrupo, int socketNbr);
int buscarGrupoUsuario(int aux);
int buscarPosicionUsuario(int aux);
int buscarPosicionPorSocket(int aux);


//------------------------------------------------------------------------------
// Si el usuario no esta en el array lo agrega.
//------------------------------------------------------------------------------
void agregarUsuario(uint16_t idUsuario, char * nombreUsuario, uint16_t idGrupo, int socketNbr) {
	int group=0, pos=0, userPos=0;
	char letra = '\0';
	
	letra = nombreUsuario[userPos];
	while(letra != '\n')
		letra = nombreUsuario[userPos++];
	
	group = buscarGrupoUsuario(idUsuario);
	//Si el usuario aun no fue agregado lo agrega
	if(group == 0) {	

	}
	//Si ya existe es una reconexion
	else {
		pos = buscarPosicionUsuario(idUsuario);
		usersArray[pos].socketNumber = socketNbr;	//Solo actualiza el socket
	}
	mostrarUsuarios();
}

//------------------------------------------------------------------------------
// Busca usuario por id, si lo encuentra retorna id de grupo, sino 0.
//------------------------------------------------------------------------------
int buscarGrupoUsuario(int aux) {
	int i, ret=0;
	
	for(i=0;i<5;i++) {
		if(usersArray[i].idUsuario == aux) {
			ret = usersArray[i].idUsuario;
			break;
		}
	}
	return ret;
}

//------------------------------------------------------------------------------
// Busca usuario por id, si lo encuentra retorna posicion en el array, sino -1.
//------------------------------------------------------------------------------
int buscarPosicionUsuario(int aux) {
	int i, ret=-1;
	
	for(i=0;i<5;i++) {
		if(usersArray[i].idUsuario == aux) {
			ret = i;
			break;
		}
	}
	return ret;
}

//------------------------------------------------------------------------------
// Busca usuario por socket, si lo encuentra retorna posicion en el array, sino -1.
//------------------------------------------------------------------------------
int buscarPosicionPorSocket(int aux) {
	int i, ret=-1;
	
	for(i=0;i<5;i++) {
		if(usersArray[i].socketNumber == aux) {
			ret = i;
			break;
		}
	}
	return ret;
}





